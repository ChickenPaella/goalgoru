app.name=gorugoru-api
app.version.id=1
app.version.name=0.0.1

server.error.whitelabel.enabled=false
#actuator
management.security.enabled=false

server.port=8080
server.contextPath=/api

# ===============================
# = DATA SOURCE
# ===============================

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=
# Username and password
spring.datasource.username=root
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)
# ref: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.5-Configuration-Changelog
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.time-between-eviction-runs-millis=3600000
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# = SESSION
# ===============================
spring.session.store-type=none

# ===============================
# = LOGGING
# ===============================
# Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
logging.config=
# Conversion word used when logging exceptions.
logging.exception-conversion-word=%wEx
# Log file name. For instance `myapp.log`
logging.file=
# Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=DEBUG
logging.level.com.gorugoru.api.*=INFO
# Location of the log file. For instance `/var/log`
logging.path=
# Appender pattern for output to the console. Only supported with the default logback setup.
#logging.pattern.console=
# Appender pattern for output to the file. Only supported with the default logback setup.
#logging.pattern.file=
# Appender pattern for log level (default %5p). Only supported with the default logback setup.
logging.pattern.level=%5p
# Register a shutdown hook for the logging system when it is initialized.
logging.register-shutdown-hook=false

# ===============================
# = AOP
# ===============================
# Add @EnableAspectJAutoProxy.
#spring.aop.auto=true
# Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).
#spring.aop.proxy-target-class=false

# ===============================
# = THYMELEAF
# ===============================
spring.thymeleaf.cache=false

# ===============================
# = REST
# ===============================
spring.data.rest.base-path=/hal




